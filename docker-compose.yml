services:
  app:
    build: .
    container_name: betting-app
    ports:
      - "${PORT}:${PORT}"
    environment:
      - PORT=${PORT}
      - MONGO_URI=mongodb://mongo1:27017,mongo2:27017,mongo3:27017/betting?replicaSet=rs0
      - REDIS_URL=redis://redis:6379
    depends_on:
      - mongo1
      - mongo2
      - mongo3
      - redis

  mongo1:
    image: mongo:6
    container_name: mongo1
    ports:
      - "27017:27017"
    command: ["--replSet", "rs0", "--bind_ip_all"]
    volumes:
      - mongo1-data:/data/db

  mongo2:
    image: mongo:6
    container_name: mongo2
    ports:
      - "27018:27017"
    command: ["--replSet", "rs0", "--bind_ip_all"]
    volumes:
      - mongo2-data:/data/db

  mongo3:
    image: mongo:6
    container_name: mongo3
    ports:
      - "27019:27017"
    command: ["--replSet", "rs0", "--bind_ip_all"]
    volumes:
      - mongo3-data:/data/db

  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"

  mongo-init-replica:
    image: mongo:6
    container_name: mongo-init-replica
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    entrypoint: >
      bash -c "echo 'Waiting for MongoDB...'; 
      sleep 10; 
      mongosh --host mongo1:27017 --eval '
        rs.initiate({
          _id: \"rs0\",
          members: [
            { _id: 0, host: \"mongo1:27017\" },
            { _id: 1, host: \"mongo2:27017\" },
            { _id: 2, host: \"mongo3:27017\" }
          ]
        });
      '"

volumes:
  mongo1-data:
  mongo2-data:
  mongo3-data:
